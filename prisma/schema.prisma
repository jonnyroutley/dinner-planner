// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    // previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "mongodb"
    url      = env("MONGO_URI")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    dinnerIDs     String[]  @db.ObjectId
    dinners       Dinner[]  @relation(fields: [dinnerIDs], references: [id])
}

model Dinner {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    updatedAt DateTime @updatedAt
    date      DateTime
    name      String
    userIDs   String[] @db.ObjectId
    userNames String[] @db.ObjectId
    users     User[]   @relation(fields: [userIDs], references: [id])
    time      String
    // recipe    Recipe   @relation(fields: [recipeId], references: [id])
    // recipeId  String   @db.ObjectId
}


// model WeekPlan {
//     id        String   @id @default(auto()) @map("_id") @db.ObjectId
//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
//     commences DateTime
// }
